[mispquery-command]
syntax		= mispquery
shortdesc	= Python-based LDAP Query Command
description	= ldapquery is a generating command that allows the user to query an LDAP service

example1 = | ldapquery uri="ldap://ldap.example.com" basedn="dc=example,dc=com"
example2 = | ldapquery uri="ldaps://ldap.example.com:636" verifycert=true scope=onelevel basedn="ou=users,dc=example,dc=com" binddn="dn=splunk,ou=serviceaccounts,dc=example,dc=com" bindpassword="password" ldapfilter="(objectClass=posixAccount)" attributelist="cn mail"

##################
# mispgetioc
##################
[mispgetioc-command]
syntax = |mispgetioc (<mispgetioc-options>)* 
shortdesc = retrieve attributes of matching events in MISP instance.
description = retrieve attributes of matching events in MISP instance. Must provide either option 'eventid=' or 'last='.
usage = public
example1 = | mispgetioc last=10d
comment1 = retrieve attributes of all events published in last 10 days.
example2 = | mispgetioc last=10d category="Payload delivery,Network activity" type=ip-dst onlyids=y
comment2 = retrieve published in last 10 days attributes of type 'ip-dst' and categories 'Payload delivery' or 'Network activity' and with the flag 'to_ids' set.
usage = public
related = misp
tags = misp

[mispgetioc-options]
syntax = (eventid=<int>) |  (last=<int>dhm)  onlyids=<bool> category=CSV_string type=CSV_string getuuid=y/n getorg=y/n tags=CSV_string  not_tags=CSV_string mispsrv=https://host:port mispkey=misp-authorization-key  sslcheck=y/n            
description = mispgetioc searches in MISP instance (either the one defined in app setup or\
  at mispsrv URL with mispkey checking the certificate or not (sshcheck).\
  You can filter on 'category' or 'type' of attributes, on events having the 'to_ids' flag\
  or specific 'tags' or on contrary not having 'not_tags'.\
  You may display the attribuite uuid (getuuid: defqult = false) or org (getorg: default=false)